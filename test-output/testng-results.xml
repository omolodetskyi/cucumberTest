<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="12921" started-at="2020-06-02T03:48:50Z" finished-at="2020-06-02T03:49:03Z">
    <groups>
    </groups>
    <test name="Login with correct creds" duration-ms="5520" started-at="2020-06-02T03:48:50Z" finished-at="2020-06-02T03:48:55Z">
      <class name="tests.LoginTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, org.testng.ITestContext)[pri:0, instance:tests.LoginTest@47c62251]" name="beforeTest" is-config="true" duration-ms="2348" started-at="2020-06-02T06:48:50Z" finished-at="2020-06-02T06:48:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Login with valid username/password]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[org.testng.TestRunner@ee86bcb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="loginTest()[pri:0, instance:tests.LoginTest@47c62251]" name="loginTest" duration-ms="3055" started-at="2020-06-02T06:48:52Z" description="happy path for Login page" finished-at="2020-06-02T06:48:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at org.testng.Assert.assertEquals(Assert.java:568)at org.testng.Assert.assertEquals(Assert.java:578)at tests.LoginTest.loginTest(LoginTest.java:56)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:tests.LoginTest@47c62251]" name="closeBrowser" is-config="true" duration-ms="96" started-at="2020-06-02T06:48:55Z" finished-at="2020-06-02T06:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- Login with correct creds -->
    <test name="Login with wrong user" duration-ms="3573" started-at="2020-06-02T03:48:56Z" finished-at="2020-06-02T03:48:59Z">
      <class name="tests.LoginTest_wrongCreds">
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest_wrongCreds@57fffcd7]" name="beforeTest" is-config="true" duration-ms="942" started-at="2020-06-02T06:48:56Z" finished-at="2020-06-02T06:48:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Login with wrong user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loginWithWrongCreds(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest_wrongCreds@57fffcd7]" name="loginWithWrongCreds" duration-ms="2551" started-at="2020-06-02T06:48:57Z" description="negative check for Login page" finished-at="2020-06-02T06:48:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[wrongUser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SuperSecretPassword!]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Your username is invalid!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithWrongCreds -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:tests.LoginTest_wrongCreds@57fffcd7]" name="closeBrowser" is-config="true" duration-ms="78" started-at="2020-06-02T06:48:59Z" finished-at="2020-06-02T06:48:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.LoginTest_wrongCreds -->
    </test> <!-- Login with wrong user -->
    <test name="Login with wrong password" duration-ms="3656" started-at="2020-06-02T03:48:59Z" finished-at="2020-06-02T03:49:03Z">
      <class name="tests.LoginTest_wrongCreds">
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest_wrongCreds@4f7d0008]" name="beforeTest" is-config="true" duration-ms="958" started-at="2020-06-02T06:48:59Z" finished-at="2020-06-02T06:49:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Login with wrong password]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loginWithWrongCreds(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest_wrongCreds@4f7d0008]" name="loginWithWrongCreds" duration-ms="2562" started-at="2020-06-02T06:49:00Z" description="negative check for Login page" finished-at="2020-06-02T06:49:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[tomsmith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrongPassword]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Your password is invalid!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithWrongCreds -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:tests.LoginTest_wrongCreds@4f7d0008]" name="closeBrowser" is-config="true" duration-ms="134" started-at="2020-06-02T06:49:03Z" finished-at="2020-06-02T06:49:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- tests.LoginTest_wrongCreds -->
    </test> <!-- Login with wrong password -->
  </suite> <!-- Suite -->
</testng-results>
